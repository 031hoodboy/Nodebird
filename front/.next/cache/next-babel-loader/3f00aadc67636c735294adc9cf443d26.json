{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from '../reducers';\n\nconst configureStore = () => {\n  const enhgancer = false ? compose(applyMiddleware([])) : conposeWithDevTools(applyMiddleware([]));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/store/configureStore.js"],"names":["createWrapper","createStore","compose","applyMiddleware","composeWithDevTools","reducer","configureStore","enhgancer","conposeWithDevTools","store","enhancer","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AACA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,SAAS,GAAG,QAChBL,OAAO,CAACC,eAAe,CAAC,EAAD,CAAhB,CADS,GAEhBK,mBAAmB,CAACL,eAAe,CAAC,EAAD,CAAhB,CAFrB;AAGA,QAAMM,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUK,QAAV,CAAzB;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAf;AAIA,SAAOJ,KAAP;AACH,CAVD;;AAcA,MAAMK,OAAO,GAAGd,aAAa,CAACM,cAAD,EAAiB;AAC1CS,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAGA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nimport reducer from '../reducers';\nconst configureStore = () => {\n    const enhgancer = process.env.NODE_ENV == 'production'\n    ? compose(applyMiddleware([]))\n    : conposeWithDevTools(applyMiddleware([]))\n    const store = createStore(reducer, enhancer);\n    store.dispatch({\n        type: 'CHANGE_NICKNAME',\n        data: 'boogicho',\n    })\n    return store;\n}\n\n\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === 'development',});\n\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}