{"ast":null,"code":"var _jsxFileName = \"/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, ButtonGroup, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }),\n      id = _useSelector.id;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Propover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatat: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this),\n        title: post.User.nickname,\n        description: post.comtemt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"4MVYJoCTHgV8s+RakI4Eicf7Tnc=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/components/PostCard.js"],"names":["React","PropTypes","useSelector","Card","Popover","ButtonGroup","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PostCard","post","state","user","me","id","images","Images","User","nickname","comtemt","propTypes","shape","number","object","content","string","createAt","Comments","arrayOf","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4CC,MAA5C,QAAyD,MAAzD;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,eAAxC,EAAyDC,gBAAzD,QAAgF,mBAAhF;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAAA,qBACZX,WAAW,CAAC,UAACY,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeC,EAA1B;AAAA,GAAD,CADC;AAAA,MAClBA,EADkB,gBAClBA,EADkB;;AAEzB,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEJ,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD7B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,eAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eAHK,eAIL,QAAC,QAAD;AAAqB,QAAA,OAAO,eACxB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKF,EAAE,IAAIJ,IAAI,CAACO,IAAL,CAAUH,EAAV,KAAiBA,EAAvB,gBAEG;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ;AAAA,0BAFH,gBAOC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,iBADJ;AAAA,+BAYI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAZJ,SAAc,MAAd;AAAA;AAAA;AAAA;AAAA,eAJK,CAFb;AAAA,6BAsBA,QAAC,IAAD,CAAM,IAAN;AACA,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASJ,IAAI,CAACO,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,iBADR;AAEI,QAAA,KAAK,EAAER,IAAI,CAACO,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,EAAER,IAAI,CAACS;AAHtB;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAkCH,CApCD;;GAAMV,Q;UACWV,W;;;KADXU,Q;AAsCNA,QAAQ,CAACW,SAAT,GAAqB;AACjBV,EAAAA,IAAI,EAAEZ,SAAS,CAACuB,KAAV,CAAgB;AAClBP,IAAAA,EAAE,EAAEhB,SAAS,CAACwB,MADI;AAElBV,IAAAA,IAAI,EAAEd,SAAS,CAACyB,MAFE;AAGlBC,IAAAA,OAAO,EAAE1B,SAAS,CAAC2B,MAHD;AAIlBC,IAAAA,QAAQ,EAAE5B,SAAS,CAACyB,MAJF;AAKlBI,IAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,OAAV,CAAkB9B,SAAS,CAACyB,MAA5B,CALQ;AAMlBP,IAAAA,MAAM,EAAElB,SAAS,CAAC8B,OAAV,CAAkB9B,SAAS,CAACyB,MAA5B;AANU,GAAhB,EAOHM;AARc,CAArB;AAWA,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {Card, Popover, ButtonGroup, Button, Avatar} from 'antd';\nimport {RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined} from '@ant-design/icons';\n\nconst PostCard = ({post}) => {\n    const {id} = useSelector((state) => state.user.me?.id);\n    return (\n        <div>\n            <Card \n                cover={post.images[0] && <PostImages images={post.Images} /> }\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    <HeartOutlined key=\"heart\" />,\n                    <MessageOutlined key=\"comment\" />,\n                    <Propover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id  \n                            ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\" >삭제</Button>\n                                </>\n                            ) \n                            : <Button>신고</Button> }\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Propover>\n                ]}\n            >\n            <Card.Meta \n            avatat={<Avatar>{post.User.nickname[0]}</Avatar>}\n                title={post.User.nickname}\n                description={post.comtemt}\n            />\n            </Card>\n            {/* <CommentForm /> */}\n            {/* <Comments/> */}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        user: PropTypes.object,\n        content: PropTypes.string,\n        createAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}