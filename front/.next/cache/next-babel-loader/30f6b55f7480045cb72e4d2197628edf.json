{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _require = require(\"antd/lib/input/Password\"),\n    Password = _require[\"default\"];\n\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nvar login = function login(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/reducers/index.js"],"names":["require","Password","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","rootReducer","state","action"],"mappings":";;;;;;eAA8BA,OAAO,CAAC,yBAAD,C;IAApBC,Q;;AAEjB,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPW,CAArB;;AAYA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD;;AAQA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BX,YAA0B;AAAA,MAAXY,MAAW;;AACnD,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,QAAL;AACI,6CACOE,KADP;AAEIV,QAAAA,IAAI,kCACDU,KAAK,CAACV,IADL;AAEJC,UAAAA,UAAU,EAAE,IAFR;AAGJD,UAAAA,IAAI,EAAEW,MAAM,CAACJ;AAHT;AAFR;AAFR;AAWH,CAZD;;AAcA,eAAeE,WAAf","sourcesContent":["const { default: Password } = require(\"antd/lib/input/Password\")\n\nconst initialState = {\n    user: {\n        isLoggedIn: false,\n        user: null,\n        signUpData: {},\n        loginData: {},\n    },\n    post: {\n        mainPosts: [],\n    }\n}\n\nconst login = (data) => {\n    return {\n        type: 'LOG_IN',\n        data,\n    }\n}\n\n\nconst rootReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'LOG_IN':\n            return {\n                ...state,\n                user: {\n                ...state.user,\n                isLoggedIn: true,\n                user: action.data,\n            }\n            };\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}