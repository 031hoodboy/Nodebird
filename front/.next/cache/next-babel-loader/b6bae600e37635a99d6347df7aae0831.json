{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst {\n  default: Password\n} = require(\"antd/lib/input/Password\");\n\nconst initialState = {\n  name: 'zerocho',\n  age: 27,\n  password: 'babo'\n};\nconst changeNickname = {\n  type: 'CHANGE_NICKNAME',\n  data\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/reducers/index.js"],"names":["default","Password","require","initialState","name","age","password","changeNickname","type","data","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAM;AAAEA,EAAAA,OAAO,EAAEC;AAAX,IAAwBC,OAAO,CAAC,yBAAD,CAArC;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,SADW;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;AAMA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAE,iBADa;AAEnBC,EAAAA;AAFmB,CAAvB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAwBS,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,iBAAL;AACI,6CACOG,KADP;AAEIP,QAAAA,IAAI,EAAEQ,MAAM,CAACH;AAFjB;AAFR;AAOH,CARD;;AAUA,eAAeC,WAAf","sourcesContent":["const { default: Password } = require(\"antd/lib/input/Password\")\n\nconst initialState = {\n    name: 'zerocho',\n    age: 27,\n    password: 'babo',\n}\n\nconst changeNickname = {\n    type: 'CHANGE_NICKNAME',\n    data,\n}\n\nconst rootReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'CHANGE_NICKNAME':\n            return {\n                ...state,\n                name: action.data,\n            }\n    }\n};\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}