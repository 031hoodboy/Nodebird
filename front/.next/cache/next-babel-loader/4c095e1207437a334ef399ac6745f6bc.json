{"ast":null,"code":"var _jsxFileName = \"/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, ButtonGroup, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone, FolderOpenFilled } from '@ant-design/icons';\nimport PostImages from './PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpend = _useState2[0],\n      setCommentFormOpend = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpend(function (prev) {\n      return !prev;\n    });\n  });\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, _this) : /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 31\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatat: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, _this),\n        title: post.User.nickname,\n        description: post.comtemt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), commentFormOpend && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB313\\uAE00\\uBD80\\uBD84\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"CcIl12OEIpctec/edPTrc7pzOfE=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    user: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Applications/mampstack-7.4.8-0/apache2/htdocs/nodebird/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","Card","Popover","ButtonGroup","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","FolderOpenFilled","PostImages","PostCard","post","liked","setLiked","commentFormOpend","setCommentFormOpend","onToggleLike","prev","onToggleComment","id","state","user","me","marginBottom","Images","User","nickname","comtemt","propTypes","shape","number","object","content","string","createAt","Comments","arrayOf","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,WAAvB,EAAoCC,MAApC,EAA4CC,MAA5C,QAAyD,MAAzD;AACA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,eAHJ,EAIIC,gBAJJ,EAKIC,YALJ,EAMIC,gBANJ,QAOO,mBAPP;AAQA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AAAA,kBAECjB,QAAQ,CAAC,KAAD,CAFT;AAAA,MAElBkB,KAFkB;AAAA,MAEXC,QAFW;;AAAA,mBAGuBnB,QAAQ,CAAC,KAAD,CAH/B;AAAA,MAGlBoB,gBAHkB;AAAA,MAGAC,mBAHA;;AAIzB,MAAMC,YAAY,GAAGrB,WAAW,CAAC,YAAM;AACnCkB,IAAAA,QAAQ,CAAC,UAACI,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAR;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAGA,MAAMC,eAAe,GAAGvB,WAAW,CAAC,YAAM;AACtCoB,IAAAA,mBAAmB,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAnB;AACH,GAFkC,CAAnC;AAGA,MAAME,EAAE,GAAGtB,WAAW,CAAC,UAACuB,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,YAAY,EAAE;AAAf,KAAZ;AAAA,4BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEZ,IAAI,CAACa,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEb,IAAI,CAACa;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD7B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADK,EAELZ,KAAK,gBACH,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,SAA3B;AAAiD,QAAA,OAAO,EAAEI;AAA1D,SAAyC,OAAzC;AAAA;AAAA;AAAA;AAAA,eADG,gBAEH,QAAC,eAAD;AAA6B,QAAA,OAAO,EAAEA;AAAtC,SAAqB,OAArB;AAAA;AAAA;AAAA;AAAA,eAJG,eAKL,QAAC,eAAD;AAA6B,QAAA,OAAO,EAAEE;AAAtC,SAAqB,OAArB;AAAA;AAAA;AAAA;AAAA,eALK,eAML,QAAC,OAAD;AAAoB,QAAA,OAAO,eACvB,QAAC,MAAD,CAAQ,KAAR;AAAA,oBACKC,EAAE,IAAIR,IAAI,CAACc,IAAL,CAAUN,EAAV,KAAiBA,EAAvB,gBAEI;AAAA,oCACG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,eAEG,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFH;AAAA,0BAFJ,gBAOC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,iBADJ;AAAA,+BAYI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAZJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,eANK,CAFb;AAAA,6BAwBA,QAAC,IAAD,CAAM,IAAN;AACA,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASR,IAAI,CAACc,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,iBADR;AAEI,QAAA,KAAK,EAAEf,IAAI,CAACc,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,EAAEf,IAAI,CAACgB;AAHtB;AAAA;AAAA;AAAA;AAAA;AAxBA;AAAA;AAAA;AAAA;AAAA,aADJ,EA+BKb,gBAAgB,iBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhCR;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAwCH,CAnDD;;GAAMJ,Q;UAUSb,W;;;KAVTa,Q;AAqDNA,QAAQ,CAACkB,SAAT,GAAqB;AACjBjB,EAAAA,IAAI,EAAEf,SAAS,CAACiC,KAAV,CAAgB;AAClBV,IAAAA,EAAE,EAAEvB,SAAS,CAACkC,MADI;AAElBT,IAAAA,IAAI,EAAEzB,SAAS,CAACmC,MAFE;AAGlBC,IAAAA,OAAO,EAAEpC,SAAS,CAACqC,MAHD;AAIlBC,IAAAA,QAAQ,EAAEtC,SAAS,CAACmC,MAJF;AAKlBI,IAAAA,QAAQ,EAAEvC,SAAS,CAACwC,OAAV,CAAkBxC,SAAS,CAACmC,MAA5B,CALQ;AAMlBP,IAAAA,MAAM,EAAE5B,SAAS,CAACwC,OAAV,CAAkBxC,SAAS,CAACmC,MAA5B;AANU,GAAhB,EAOHM;AARc,CAArB;AAWA,eAAe3B,QAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {Card, Popover, ButtonGroup, Button, Avatar} from 'antd';\nimport {\n    RetweetOutlined, \n    HeartOutlined, \n    MessageOutlined, \n    EllipsisOutlined,\n    HeartTwoTone,\n    FolderOpenFilled,\n} from '@ant-design/icons';\nimport PostImages from './PostImages';\n\nconst PostCard = ({post}) => {\n\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpend, setCommentFormOpend] = useState(false);\n    const onToggleLike = useCallback(() => {\n        setLiked((prev) => !prev );\n    }, []);\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpend((prev) => !prev);\n    })\n    const id = useSelector((state) => state.user.me?.id);\n    return (\n        <div style={{marginBottom: 20}} >\n            <Card \n                cover={post.Images[0] && <PostImages images={post.Images} /> }\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked\n                    ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                    : <MessageOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"heart\" onClick={onToggleComment} />,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id  \n                            ? (\n                                 <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\" >삭제</Button>\n                                </>\n                            ) \n                            : <Button>신고</Button> }\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n            <Card.Meta \n            avatat={<Avatar>{post.User.nickname[0]}</Avatar>}\n                title={post.User.nickname}\n                description={post.comtemt}\n            />\n            </Card>\n            {commentFormOpend && (\n                <div>\n                    댓글부분   \n                </div>)} \n            {/* <CommentForm /> */}\n            {/* <Comments/> */}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        user: PropTypes.object,\n        content: PropTypes.string,\n        createAt: PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}